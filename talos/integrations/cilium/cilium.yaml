# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-secrets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  annotate-k8s-node: "true"
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-acceleration: disabled
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: talos-default
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  controller-group-metrics: write-cni-file sync-host-ips sync-lb-maps-with-k8s-services
  custom-cni-conf: "false"
  debug: "false"
  dnsproxy-enable-transparent-mode: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-cilium-endpoint-slice: "true"
  enable-endpoint-health-checking: "true"
  enable-envoy-config: "true"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "true"
  enable-ingress-controller: "true"
  enable-ingress-proxy-protocol: "false"
  enable-ingress-secrets-sync: "true"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-masquerade-to-route-source: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  enforce-ingress-https: "true"
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-export-file-max-backups: "5"
  hubble-export-file-max-size-mb: "10"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  ingress-default-lb-mode: dedicated
  ingress-lb-annotation-prefixes: service.beta.kubernetes.io service.kubernetes.io
    cloud.google.com
  ingress-secrets-namespace: cilium-secrets
  ingress-shared-lb-service-name: cilium-ingress
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.0.0.0/8
  k8s-client-burst: "20"
  k8s-client-qps: "10"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  max-connected-clusters: "255"
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  prometheus-serve-addr: :9962
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\nmetrics-listen-address: \":9966\"\ndial-timeout:
    \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file:
    /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files:
    /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls: true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location
    /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n
    \           return 200 'ok';\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQ21IWmQyS3lBVGJCZmNNKzZKQ2FTREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TlRBM01EUXhOVE13V2hjTk1qY3dOVEEzTURReApOVE13V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2xMZlFKR21GNmhtVHNBWjRpdjBzUEJ4YVk5dGFwTU9OL1NyYVNETng2TGVUSzJNRWQKY3ZUbE1RbXUvd3h4dk83MFp6V0tHTXY4VmdFbTZKRjJtSlAyMkxoWS85bkhtYlI4cVpTM2xBQTZtdVJvc2VxSQo4bWpZY2tqNURKTnowa1RZOWsrUm5MTnk0VHgzZ1gvVERVdjZmQVlLVS9qWVFUbVdsWjdGOFc5RUhwNksxZlV5CkJRQkxOWFI5MWZqZHg2bmNtaVJ3SG11eitiUmhrVysrdWdlYi9zWC96cWJYUXhTNnY3U1Z3MUFJNGhEWFNNWkEKRXpzV3llRkNxYU8wWnppMlhnN1h3QmpkcnprUUxNVUhONG9CdzRzZ0JOT0NpVEVveklCNm9JUS9IVllyYW9UbgpEaE5pYlowQmVwNDJnMnRUa0w0Z0NENmM2UnhhZ1R3dlU4NGJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVxamMyTDBPT2dHNWcvOXF3MHcwMnpHMXlKV2N3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFHbXdRd1JJRFppMndRbGtZck5qT3F0V3ZGNUh6U0lkU0x3NHhRQUlSd2FqWVgvMVI0RkdmY2I5CmNDditLSzFNQ0lGdDJYMkdGMkc5L2tlYnlZZG1kNzlUbS9yTG12eWlpbmNId2tBN0R3SXhtb3NaOG9IMXRuSWMKZ0JPSGdSM0kvcjlYbUVGNWc1dnpKNGV1eDlMT29CZlE5QzQ2TkpCWlZuaytJOWRpelA4anpQZjZPa0p3S3pkMQo3UGNNcjA3enJEU1BzSFd3VFkrM1lhcUNIeTFYTktIWERMb0IvYjlSOGFSZlF1NDVIZzVFVW1lWVErTTBJbFRWClJJZ25iZVNDZ3lxMHc1blBmNTdnZUdGMXZjWWdTRkgrdjVMYi9GRmk1RXFaWTJLKzluRHdJRkhHdVh2NHlFVS8KMEZTRzhJdFYrSGZrU0tyY2lwdlJ5bXh0cDFNS1haST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcFMzMENScGhlb1prN0FHZUlyOUxEd2NXbVBiV3FURGpmMHEya2d6Y2VpM2t5dGpCCkhYTDA1VEVKcnY4TWNienU5R2MxaWhqTC9GWUJKdWlSZHBpVDl0aTRXUC9aeDVtMGZLbVV0NVFBT3Bya2FMSHEKaVBKbzJISkkrUXlUYzlKRTJQWlBrWnl6Y3VFOGQ0Ri8wdzFMK253R0NsUDQyRUU1bHBXZXhmRnZSQjZlaXRYMQpNZ1VBU3pWMGZkWDQzY2VwM0pva2NCNXJzL20wWVpGdnZyb0htLzdGLzg2bTEwTVV1ciswbGNOUUNPSVExMGpHClFCTTdGc25oUXFtanRHYzR0bDRPMThBWTNhODVFQ3pGQnplS0FjT0xJQVRUZ29reEtNeUFlcUNFUHgxV0sycUUKNXc0VFltMmRBWHFlTm9OclU1QytJQWcrbk9rY1dvRThMMVBPR3dJREFRQUJBb0lCQUg3QmlPZ0RhcEtQMTVxVQprem11K25hSnhmbVVVcDU3ZWRrUkNKR0RkUjM5WWZtWDVIb280VzJQK0JKbWZySTVmbFhuYmRxUHRObnJWZTc1CndjYjB4M2RDVUJWY0lVOWUwSFpwM0VvVU5TakQvRXVyWElQRElsb1hPWkNFNmhLVFpXbnBlcDRQVmxYdUtteTYKMzlDaC81QTA1SjNBV3RINUc2eEhIUlJoZGpVYTNuOHdPQWtDWGZTbGdlL1A2cE1EVytOS0lCRVlqSVpTdEkrNQpLU2hvclNCMHNmd0JKN296OUVSeVpSVW5xbG9GeXBIUjFFaDJhYThhVy9ldmpRVGFCSFFpUXF2MHpsMlgxWStBCkl4TUQvcFgwRm14WHJIaHFSWkRlS2VSYmtiNGkxUVp1cGxlU0ZnQnNuU2Y0V1VHZGVRWE1XUEFHUXJxcEcvaGcKWkhMaHRDRUNnWUVBMFUwRnBhalJQYjhwQTVFbVNGTEFac0ZyVEJlV1E3bmRNSUpESXA1czNhTnBpUlBvUTJ4SApubVVOWXN6U2ZLTjBGUzFJa0kycnVQelhuM2swVG5RQXltWGxGU1VGQTJOQkhOYWV2dDg4UHp3K3E5amZBUko2ClIyQlpxQzRoV3JOS0lXTjV5b1ArU3FMTUV5NlIxMkFLbmxFNHBQdUxWOU1qS0N5dEhZRkNFVDBDZ1lFQXlnakgKbEdsSXZMVmRMaGU5bFllRU5CRHprOFlORUt0V2x6UDFZVUZieG9CWGFNYVZHN1diZDYweDZpWTJDUjdiZTJRagp6NE5scjJXbUROWnpmemEya01aVVFBT2JrczhVa1FUNVN5VFVrOVpzN1BWWXVIb1ZFcElWKy9xZUNoUmlTYTkzCnpMTmRGbFQzWDJpakdFV3JscHVuK3pDQlNSWTYzOG85bTBDNElqY0NnWUVBaFZ6ZGowdjlYNm5SbVd0QWlHN3EKRjgrQTdmQk5tQVB6VTdoOHpLOUQwUW9SOGYxVVRybk0vTG1KQ1A1WDFJRldNelF5ZTZFNTNWcUdqaC90MjF1QgpNWFl4dlFKa3FsN3hHMDRKd3JkOXJSRlhJYXJEbGV4UEsvSFJ6eDd0czl4d0RNeFV5MXpGaUlzcEc4UGR1KzEvCmRwZHNUM3ZVc3ZaZS9YZFNLMjIwU2tVQ2dZQWQrNXVTM09VY2pGWGR4MHd0YXNVbDdQWVpFaVZTT2Z0SnlUNDcKUnJYV0NhbnZOTGxnT1YxdkwxYmZCdml4OWRCZ3lZVy9BQ01SR3FhLzlQdUMvNTJzY3FLQ05ZYmJETHhpb1RoVgovSXRIdldUQTdkQlM0RnRNUEQzaS9WaUM2bStEdS9TdGZsanNQWVBRdHZpdFczbVJpbHd0blE4eXg0ZkpPbnhXCkZBNi9sUUtCZ0FKbEZZY1NyWkc3bHJHZklVTXBXWmFxdEV2cStiYjB0djdadys5S1NrMkRnK3VacXdqSlduOU8KWWJDK2ZVdkRXNnE0WXBsL3lhMkp5S1F1ekFva0FzU0FaWmF1cTBUTmVEdGh4ZG1ZSHo2ckFtejBKQTNwUXJjWgpUT1A1TlBIRWJYMG00aVF1OXJ0Z2lmVWg4NDdiL3d2ZnJnRmd2d2E4U0hEYWx1VjZoNkZzCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQ21IWmQyS3lBVGJCZmNNKzZKQ2FTREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TlRBM01EUXhOVE13V2hjTk1qY3dOVEEzTURReApOVE13V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2xMZlFKR21GNmhtVHNBWjRpdjBzUEJ4YVk5dGFwTU9OL1NyYVNETng2TGVUSzJNRWQKY3ZUbE1RbXUvd3h4dk83MFp6V0tHTXY4VmdFbTZKRjJtSlAyMkxoWS85bkhtYlI4cVpTM2xBQTZtdVJvc2VxSQo4bWpZY2tqNURKTnowa1RZOWsrUm5MTnk0VHgzZ1gvVERVdjZmQVlLVS9qWVFUbVdsWjdGOFc5RUhwNksxZlV5CkJRQkxOWFI5MWZqZHg2bmNtaVJ3SG11eitiUmhrVysrdWdlYi9zWC96cWJYUXhTNnY3U1Z3MUFJNGhEWFNNWkEKRXpzV3llRkNxYU8wWnppMlhnN1h3QmpkcnprUUxNVUhONG9CdzRzZ0JOT0NpVEVveklCNm9JUS9IVllyYW9UbgpEaE5pYlowQmVwNDJnMnRUa0w0Z0NENmM2UnhhZ1R3dlU4NGJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVxamMyTDBPT2dHNWcvOXF3MHcwMnpHMXlKV2N3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFHbXdRd1JJRFppMndRbGtZck5qT3F0V3ZGNUh6U0lkU0x3NHhRQUlSd2FqWVgvMVI0RkdmY2I5CmNDditLSzFNQ0lGdDJYMkdGMkc5L2tlYnlZZG1kNzlUbS9yTG12eWlpbmNId2tBN0R3SXhtb3NaOG9IMXRuSWMKZ0JPSGdSM0kvcjlYbUVGNWc1dnpKNGV1eDlMT29CZlE5QzQ2TkpCWlZuaytJOWRpelA4anpQZjZPa0p3S3pkMQo3UGNNcjA3enJEU1BzSFd3VFkrM1lhcUNIeTFYTktIWERMb0IvYjlSOGFSZlF1NDVIZzVFVW1lWVErTTBJbFRWClJJZ25iZVNDZ3lxMHc1blBmNTdnZUdGMXZjWWdTRkgrdjVMYi9GRmk1RXFaWTJLKzluRHdJRkhHdVh2NHlFVS8KMEZTRzhJdFYrSGZrU0tyY2lwdlJ5bXh0cDFNS1haST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU1KNzNGak92RnNxRGg0TVh5dElLdzh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURVd056QTBNVFV6TUZvWERUSTNNRFV3TnpBMApNVFV6TUZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXlQYmN3amUrdXE4VVNnU2pJd2J6Y20wOUlwdVoKMEhueXluYWNaZjJTbXBENklnTjNOUCtMK0tEVS92ZEFZcG02VjdjR2ExTElrYXhFL0FZSUVabmV5U2cwLzNHVgpHZEk1TG95a056bXMybjNTWWhyaVRGdG44WDgydDRkblBzVEZKWjU2YWQ1UC9LNnJocnpsOWF5c3ZLTGdpNHQ2CjZkN280NnREbkVKampYeTZkOEtob2YxU2QzTURpaWVBTENwajhiYnRqelRlNUlWdG11ME41M0M2WmZtaExCcEoKNnlPWkxicmVuVEdzWUY4R0hkT2p6b2t4TkFoeUQ1OGErTitVZUlmU0dRS1hyZFdUTi8xblQrNTdWQU04bHVhRgpvOERFT2xzTDdESkN5YkMvTlRVejVNNXNUUUxSZGFwcFBHT0RYWXpzZkFhaGZjSDlnUWhwWDdodzd3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU3FOell2UTQ2QWJtRC8yckRURFRiTQpiWElsWnpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRC9lUEgrWTV5T2F5K2RnWEtRV3dZNVVjMi9DeUcvT1ZCelgxUXY5UzhZcGF4dWQKSnBaSm04SWp0MXorNU5vZVJyTWNnN3lZajN5aHVucG02c1hXS3dJOXdkUm40QkdLK250dlNydzBRcWxpaEF2UwpOSGhIUVBDUG5OQ01heCt6MFY0NXk3dUlzbnVWaUQ2RnF3NERQbHkwL214NFFOVWFkVms4NGFSa1MwdGUza3hYClJYTkE3Sjg1OTUvREYwSW9XckdsTUhoK1hpN1VrMmVIRW9QSUlVMjdzeTdJTzhoenZQcGZJOTVRZU02UXZ4UjcKTmZwbjlFeFpuN0dLbUFORG9iVUlhMC9nbUpBK2RIWmhWWUUxUzgvSXd3cmFOc05hSWVCUExGVXpwdXN1dUQybgpVME5TQXpHV0paSWpPUlFQSWtvTFUzU1VxQ0RyWGdLMElZZkd1RkE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeVBiY3dqZSt1cThVU2dTakl3YnpjbTA5SXB1WjBIbnl5bmFjWmYyU21wRDZJZ04zCk5QK0wrS0RVL3ZkQVlwbTZWN2NHYTFMSWtheEUvQVlJRVpuZXlTZzAvM0dWR2RJNUxveWtOem1zMm4zU1locmkKVEZ0bjhYODJ0NGRuUHNURkpaNTZhZDVQL0s2cmhyemw5YXlzdktMZ2k0dDY2ZDdvNDZ0RG5FSmpqWHk2ZDhLaApvZjFTZDNNRGlpZUFMQ3BqOGJidGp6VGU1SVZ0bXUwTjUzQzZaZm1oTEJwSjZ5T1pMYnJlblRHc1lGOEdIZE9qCnpva3hOQWh5RDU4YStOK1VlSWZTR1FLWHJkV1ROLzFuVCs1N1ZBTThsdWFGbzhERU9sc0w3REpDeWJDL05UVXoKNU01c1RRTFJkYXBwUEdPRFhZenNmQWFoZmNIOWdRaHBYN2h3N3dJREFRQUJBb0lCQUNBUmxLVEJkSVFoMENFSApvR2pFZ1RDdlVlUWw1R09xTWg0dzAwQkxPSXZGdXNTV3ZQME9FbTM0YkVUTGU5REFLMFk0QktRM3I1M2ZXWnJGCjg1K3JhQ3U5YU1laWZtS0NjM0dFSytoTUlkTXo1TkNXN2FtMXBGNmJLRVlkSzFLTzM4N2kvVEhMc2dQbWM2U3EKbkIrYUVHNkJwMGRkV0ozZFhsaUdTZUd6am1OVFRUdzhXZkQzWjN4MHh2TUgrSWEyTldaMHpmcTBkQmJ5LzVIMQpBLzl4U1JRWkJoUFVpajIxYWp1UU10bnZ2Ukx3cmt0VjVMMTNRWTNidnUwZ0ZsNGc3dmZzSFF1WDVmVEhNQkNPCkx3TytJd01lRmxNa0RhZThtL09YM291NFc1WEtITDVFNGZTdktMOXRkWHdyY2RuemVOY2dEeDN6K3kwUDFzZUcKSlR6ZEFKRUNnWUVBekRqWWxEbHFWcWR2VEpDNC91alpjUjZpSnl4TmYxNHBUSkh5V1BzaEtQMk9vWE9oTnZPagp6QlQwTDBVSWw0dklwMk9RSWhvMlpvaHJTT01ma1J4VnNHaGJSOFE2bGxCeXgrVmxxNlRiNyt3NVZCZ1poUUZwClFQNkFDRytmdkJKYkxHU2M1anM1cGlwb3lvL2ZoWVpZdjZRWk0vRy9DM1JrRVFudURBak1Eak1DZ1lFQSsrcVIKK1J1VVpIQkxzbm1VbXRua2FBL2hzNHl6L3oxV1Z0MTlrbVdNTnNEVlNDZzZkSlVhUTZZQ05SZjJZcWdYUHRzUApqNGF4NUQ5N3dLQ3k5T0MzbHkyM3pTcG81RGZudmlqRzEwZy9YeEZtZlJuWE54U053L056a0FGZlllVjF1Y2FkCjRRa3JGbzd3cU9ocDJ0REtIdmVPc00zMkY3L0NNV25RRTdzN1hsVUNnWUF4RjNFb29HeXBpL0k3UzRiTThCaGwKRXVJVDNKaDhoNXdSNWZ1RjNFaHFYQmxQUWtaOHVUQ2t2RnkraUMrNmprV2J4MWs4ZVdTZVhTaTlDcXZwN0EvRgpLakRYSFpxZnk1THI3bjcwTmRzUTM0NGdZdkt2Z0ZsVzRGYlNzRktMbVRZRmcrSWJqaDBianBKR0x6T2lHMXQyCkpmSlJCRW5TYlJZbzZtUW96R3lROVFLQmdRRFVtOWxNNDVEdTM3T1RVbmN2NWJ1V2MranB6MU5PbEdiYzh4djYKeFVkOEltMGU5QXk1dmVrbnRPRGlESEkrTzEwN0NFanV1aUJDNGExQkdwOU9lcVdYcXRjWUNiWHkvcGZRYnJ1NgpqOWdrRlJ4cGNyaW5YT3AwdVhBTDFveTRvNThqQmxUU3l4a1pkZFA0eWdZa3pkZjRJTGpGMFYza0Ywdit4aTM5CnFTUm03UUtCZ0Q2UnZGeWpZYkU2bUhaOTBhbXRvL0hybzQyaElNb1FhQlRyMzBYUTE1eDRtK0xhTXA0ZkQyTVUKMTM0aUlocjBCVmVNcUl0Rm45b0RmWWJURkhpVkhjbUFpdGRLaU5RbVh5ZDdFZFpLM2tJcC9FT1Y5MEg3ejNnYgpPRkdnc21hU0dlRGZnQ0xOa2hOR1UrVlkvbUsyUDlLenZnbzIwN3hiK0E1cytoUkJiWVJvCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQ21IWmQyS3lBVGJCZmNNKzZKQ2FTREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TlRBM01EUXhOVE13V2hjTk1qY3dOVEEzTURReApOVE13V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2xMZlFKR21GNmhtVHNBWjRpdjBzUEJ4YVk5dGFwTU9OL1NyYVNETng2TGVUSzJNRWQKY3ZUbE1RbXUvd3h4dk83MFp6V0tHTXY4VmdFbTZKRjJtSlAyMkxoWS85bkhtYlI4cVpTM2xBQTZtdVJvc2VxSQo4bWpZY2tqNURKTnowa1RZOWsrUm5MTnk0VHgzZ1gvVERVdjZmQVlLVS9qWVFUbVdsWjdGOFc5RUhwNksxZlV5CkJRQkxOWFI5MWZqZHg2bmNtaVJ3SG11eitiUmhrVysrdWdlYi9zWC96cWJYUXhTNnY3U1Z3MUFJNGhEWFNNWkEKRXpzV3llRkNxYU8wWnppMlhnN1h3QmpkcnprUUxNVUhONG9CdzRzZ0JOT0NpVEVveklCNm9JUS9IVllyYW9UbgpEaE5pYlowQmVwNDJnMnRUa0w0Z0NENmM2UnhhZ1R3dlU4NGJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVxamMyTDBPT2dHNWcvOXF3MHcwMnpHMXlKV2N3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFHbXdRd1JJRFppMndRbGtZck5qT3F0V3ZGNUh6U0lkU0x3NHhRQUlSd2FqWVgvMVI0RkdmY2I5CmNDditLSzFNQ0lGdDJYMkdGMkc5L2tlYnlZZG1kNzlUbS9yTG12eWlpbmNId2tBN0R3SXhtb3NaOG9IMXRuSWMKZ0JPSGdSM0kvcjlYbUVGNWc1dnpKNGV1eDlMT29CZlE5QzQ2TkpCWlZuaytJOWRpelA4anpQZjZPa0p3S3pkMQo3UGNNcjA3enJEU1BzSFd3VFkrM1lhcUNIeTFYTktIWERMb0IvYjlSOGFSZlF1NDVIZzVFVW1lWVErTTBJbFRWClJJZ25iZVNDZ3lxMHc1blBmNTdnZUdGMXZjWWdTRkgrdjVMYi9GRmk1RXFaWTJLKzluRHdJRkhHdVh2NHlFVS8KMEZTRzhJdFYrSGZrU0tyY2lwdlJ5bXh0cDFNS1haST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZakNDQWtxZ0F3SUJBZ0lRVWM3RFJ2bmdmTnlCZGMrS0NkR256VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TlRBM01EUXhOVE13V2hjTk1qY3dOVEEzTURReApOVE13V2pBd01TNHdMQVlEVlFRRERDVXFMblJoYkc5ekxXUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEyaW9oOGkzYkVkczMKZGcvcTUrdm92NmtNeGk2cUU0UExNaWEwb3NTa1VqSDZFT2pOdEYyZUhYbnpVTk45TzI1RTlnNHo4czE3Tm5VVQpISkt2Mmg1ZzMwd1BUTHMycXZkeTNMNU1sYXRwclZHVFhXM0ZZTFNHdjdSZ0VJOU90Q0Y2bzdXQktPejFZL210CkxaaUszWFUxalZIeTZVbEFHek5rOFNDc2JHamhjVFdXVk9MNlhIdDNFM1hpZFJ1b083Tm5JeFp2ZXRGSWlUQXkKMk8wdzJZT0w3N25VcmdKK0t3RlhFZ3ZWdzlkU0xLVjhkN2dITVg3QTQ4QWJYS3dKVW9JaTRialRLNXg3VVFZNQpzK3VrL3ZtNlZYRzAxQmRpWVlyMFRXU1pRM2h1dFRLaVB4eG5INTFleGM1QmRLcythUWxBZnpyaWR1S1dQWnYrCnNwa28rSjhxSFFJREFRQUJvNEdUTUlHUU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlNxTnpZdgpRNDZBYm1ELzJyRFREVGJNYlhJbFp6QXdCZ05WSFJFRUtUQW5naVVxTG5SaGJHOXpMV1JsWm1GMWJIUXVhSFZpCllteGxMV2R5Y0dNdVkybHNhWFZ0TG1sdk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ1luNENnM3Jhc3U2NDMKTWlYa2FzMDJ2WkNJbWlBSExVT1NmaWxCRG5reWpzKzROcWNxczRnRFpjb2xzck5PdFlSNXNXS2l1Q01FNzVJNQpMRnB5cjYyRWMzdVpjNDcwT0JhYXExWFZyamV2UFprZmkxOERvdWdWOTU1SVFqZFNnNlAvb25WUThtL3ZZc0FRCk55bEZQSzZzbFRqRnpXYnc2Q1ZGeGlmb2hRcFNQSGIyWWNqeHRFSjVHSTE2MXZtS0Zwd01URVlXaDJnYjRidlAKTmJ1OUFkMnpGZlBLTTh3bTk0d0h2eEMvdGFhbVhOUlF6SVJBYXNuOGtDOHllTHpKWGtnLy82RWM2MWN2QllKdwpvd0wzT2dIVGlIUWIwbkdHcjg5TnljK3BDMm1yRXIxVlovODNDOUcrUFN0b21ESmxIOTJhQXdzTXcwMDh6NEl4Ck9rNkJmdnA1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMmlvaDhpM2JFZHMzZGcvcTUrdm92NmtNeGk2cUU0UExNaWEwb3NTa1VqSDZFT2pOCnRGMmVIWG56VU5OOU8yNUU5ZzR6OHMxN05uVVVISkt2Mmg1ZzMwd1BUTHMycXZkeTNMNU1sYXRwclZHVFhXM0YKWUxTR3Y3UmdFSTlPdENGNm83V0JLT3oxWS9tdExaaUszWFUxalZIeTZVbEFHek5rOFNDc2JHamhjVFdXVk9MNgpYSHQzRTNYaWRSdW9PN05uSXhadmV0RklpVEF5Mk8wdzJZT0w3N25VcmdKK0t3RlhFZ3ZWdzlkU0xLVjhkN2dICk1YN0E0OEFiWEt3SlVvSWk0YmpUSzV4N1VRWTVzK3VrL3ZtNlZYRzAxQmRpWVlyMFRXU1pRM2h1dFRLaVB4eG4KSDUxZXhjNUJkS3MrYVFsQWZ6cmlkdUtXUFp2K3Nwa28rSjhxSFFJREFRQUJBb0lCQUZkdTFVWHl2TDVPUmM3cQpHREcwYVFZTzRSQzMrTzl6UFVjdkhldXh0VTAvdkVGMG02UXlkTURKZEFzcmh4Ly9WR0hzVlVOMHVIR2R3RjZuCkp4VGFZZVo3M0JIYllkQm85VDZrZ1pybUpLY1NiMlhkTFdKUlYwT1RMWURWZml4UTBvNnptanpsb243YnZGenUKcXBDUWZkTFNTZkRXcTN0N1FIUW1yUk9SZ1BCV1ZLVVBxY2ZyaEdzVms5N0VXbDhPbldvZWNCaHYyYlpkOUw4Rwp6aVVwWXJ5U21EYjllZGxsd3BhcTJJWnB2QUoyRU8vVU1mVWNCV0hmeHV6cGZHOVhGbHZFRlQyVmxGVzM0UncxCjVHYmk0VU1YT0hmRUtyWUptdHh1VGo2NktMVE9nc0Zlb3p5b3ovMFFMSk5VaG1vbThhUjloZG13dXZ5WGNNbWcKbHhCS3hnRUNnWUVBL204elBWOXl0M1hHenFTVW5rY3ZpRyt0RGpXK1h1SWwwU0dCZUJwYmxkbVBoUEY4ZkxjdApwTlM5eFpQd1FjYmMrcE1vK0NVOVZIc0hzbkZIdkFyQjZFVmZDT1Zwa3ZqQW5DVHlJaHplaDluVVYwWGJOQkhDCjVVVmxjZnJjazNoU05aNWh6TmU2dXo4bEFUM2Q3N0pYOHhDQld2UE1pMjVJcVU1Z0YxcFV2WjBDZ1lFQTI0SE0KVThHVFlrUE8vNmVnc083Nm85VXFrY1Zyb0hFc1ZDaXA0cG1PdHBFb05VNmZGZllDV0RrM2YxdFNkY1d6YTlFNgp4N284Z1p3QnF6aG9OM3AxWGR0TkZJblZiN3dnUFBUOEdSTHgzQW5uV1JuNEM4bFV0TWtBWFg2OUdUcFVvOHZFClduSXZuTjdDejN5K2Zxdk5TWjRHUGtEQTNqU1B2WmdRQWk0MnRvRUNnWUVBaGRDdVBrVUk3SHhCQjBWLzlJNnoKN1NudTlsNUZ0Vmx6VWo0dy9aMi9OVnlySXR4dkFKakdwTDVPNEs4aDJUWmgybGV6WUc4VmhteithMWN3eHpGUgpNbnZwczZBVW1udkJzVjJ0QzB2cnJiOWU4bGVISmllQlBWdjJNckFoZWwzNXZzR0I1bDQvazJOdWJ1eSs0T1lIClk0cjJ2WU1qdk9GUHpkdXVwaG1ZSC9FQ2dZQjNyZWxOc1RrK1ZtSkNHWThQYVB6VzNwNTdJL3h1V2NZbGpKWXoKcWkyWmRNTkxiVFpucnQzUVpFSFIrbVNYT2RkOWJYSnkreU9LTnhqaDFidGNwRFBobkhRR1FyQlFYMjNrVGw0MAovWk5JdVUyZDB2N2V6a0tVM3hLSDUxWUtyemIrcDFiRFNZYVVMUkJpT0UxVW15OHVlQzVIT3Q3dFNCTW0rQVdpCmFyZ0NBUUtCZ0VLNWw0bGwvUVlSaEswQ2FKdkt4cDFuVXRBaWNScHNsMlIzUzdFejlWWlhiZHJodjdWZk1zWGIKTEJ2MG1SZEpLMTBJbmZhaGdyakEvTXc1YWt4TWo1UmM5bldTZVhpTTl5ajUvSmRpekNpYlRxRUxjdEJwZ2ZVZwp5b0RHUTNYc0FVOEZyeXFtcStxYjN5cWpiaDBGaU1HUXRJNERQTFBMWUNBRElDMkZmQU9UCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ingress
  namespace: kube-system
subsets:
- addresses:
  - ip: 192.192.192.192
  ports:
  - port: 9999
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    cilium.io/ingress: "true"
  name: cilium-ingress
  namespace: kube-system
spec:
  ports:
  - name: http
    nodePort: null
    port: 80
    protocol: TCP
  - name: https
    nodePort: null
    port: 443
    protocol: TCP
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: fc7fe9c46e28dbf993cc1e2cdc0c45896ffc1f238f0dd5bf5004ac08bc7804e2
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.15.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: bd2b1b02e8b333410f9736e42dc2a6077c0d933efda3a6b6a1f68be20c9049fa
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.15.4@sha256:03ad857feaf52f1b4774c29614f42a50b370680eb7d0bfbc1ae065df84b1070a
        imagePullPolicy: IfNotPresent
        livenessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        - containerPort: 9966
          name: prometheus
          protocol: TCP
        readinessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        startupProbe:
          failureThreshold: 20
          grpc:
            port: 4222
          periodSeconds: 3
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: e8acee96ed990156efd0291c8c33709d2c7902d2ec993eefa16c7cd3d1a9d84b
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: fc7fe9c46e28dbf993cc1e2cdc0c45896ffc1f238f0dd5bf5004ac08bc7804e2
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              key: write-cni-conf-when-ready
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
spec:
  controller: cilium.io/ingress-controller
