---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
# This Github Action is responsible for publishing Kubernetes schemas to an OCI registry.
# It is triggered by a push to the main branch, a weekly schedule, or a manual dispatch.
name: "Publish Kubernetes Schemas"

on:
  # Allows manually triggering the workflow from the Github Actions UI
  workflow_dispatch: {}
  # Runs the workflow weekly at midnight (UTC)
  schedule:
    - cron: "0 0 * * 0"
  push:
    branches:
      - "main"
    paths:
      - ".github/workflows/schemas.yaml"

env:
  OCI_REPO: "oci://ghcr.io/xunholy/kubernetes-schemas/${{ github.event.repository.name }}"

jobs:
  publish-kubernetes-schemas:
    name: Publish Kubernetes Schemas
    runs-on: ["self-hosted"]
    steps:
      - name: Setup Flux CLI
        uses: fluxcd/flux2/action@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: azure/setup-kubectl@3e0aec4d80787158d308d7b364cb1b702e7feb7f # v4
        with:
          version: 'v1.26.3'

      - name: Setup Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: 3.x

      - name: Setup crd-extractor
        uses: robinraju/release-downloader@a96f54c1b5f5e09e47d9504526e96febd949d4c2 # v1.11
        with:
          repository: datreeio/CRDs-catalog
          latest: true
          fileName: crd-extractor.zip

      - name: Write kubeconfig
        id: kubeconfig
        uses: timheuer/base64-to-file@adaa40c0c581f276132199d4cf60afa07ce60eac # v1.2
        with:
          encodedString: ${{ secrets.KUBECONFIG }}
          fileName: kubeconfig

      - name: Run crd-extractor
        env:
          KUBECONFIG: "${{ steps.kubeconfig.outputs.filePath }}"
        run: |
          unzip -j $GITHUB_WORKSPACE/crd-extractor.zip -d $GITHUB_WORKSPACE
          bash "$GITHUB_WORKSPACE"/crd-extractor.sh

      - name: Login to GHCR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish schemas as OCI
        run: |
          flux push artifact $OCI_REPO:$(git rev-parse --short HEAD) \
              --path="/home/runner/.datree/crdSchemas" \
              --source="${{ github.repositoryUrl }}" \
              --revision="main"

  publish-kubernetes-schemas-web:
    runs-on: ubuntu-latest
    needs: ["publish-kubernetes-schemas"]
    steps:
      - name: Setup Flux CLI
        uses: fluxcd/flux2/action@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1

      - name: Login to GHCR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull schemas as OCI
        run: |
          mkdir -p /home/runner/crdSchemas
          flux pull artifact $OCI_REPO:$(git rev-parse --short HEAD) --output /home/runner/crdSchemas

      - name: Write nginx-unprivileged Dockerfile
        run: |
          cat <<EOF > /home/runner/crdSchemas/Dockerfile
          FROM docker.io/nginxinc/nginx-unprivileged:latest
          COPY --chown=nginx:nginx --chmod=755 . /usr/share/nginx/html
          USER nginx
          EOF

      - name: Publish schemas as web container
        uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355 # v6.10.0
        with:
          context: /home/runner/crdSchemas
          platforms: linux/amd64,linux/arm64
          file: /home/runner/crdSchemas/Dockerfile
          push: true
          tags: |
            ghcr.io/xunholy/kubernetes-schemas-web:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: |
            org.opencontainers.image.source="https://github.com/${{ github.repository }}"
            org.opencontainers.image.authors="Michael Fornaro <20387402+xUnholy@users.noreply.github.com>"
